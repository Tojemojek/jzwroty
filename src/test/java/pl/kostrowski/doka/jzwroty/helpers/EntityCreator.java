package pl.kostrowski.doka.jzwroty.helpers;

import org.apache.commons.lang3.StringUtils;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.LinkedList;
import java.util.List;

public class EntityCreator {

    private static List<String> input;


    public static void main(String[] args) throws Exception {

        input = fillIn();
//        createDtoEntity();
//        createMappingFromExcelToDto();
//        createColumnMappingsForDto();
//        createEntity();
        createConverterFromDtoToEntity();
    }


    private static List<String> fillIn() throws Exception {

        BufferedReader bf = new BufferedReader(new FileReader("/media/Dane/IdeaProjects/jZlecenia/biznesowe/mapowanieKolumn.csv"));

        List<String> result = new LinkedList<>();

        String s = bf.readLine();

        while (StringUtils.isNotBlank(s)) {
            result.add(s);
            s = bf.readLine();
        }
        return result;
    }

    private static void createDtoEntity() {

        System.out.println("//AutoGenerated");

        for (String s : input) {
            System.out.print("private ");
            System.out.print(s.split(",")[2]);
            System.out.print(" ");
            System.out.print(s.split(",")[0]);
            System.out.println(";");
            System.out.println();
        }
        System.out.println("//End of AutoGenerated");
    }

    private static void createMappingFromExcelToDto() {

        System.out.println("//AutoGenerated");

        for (String s : input) {

            String s1 = s.split(",")[0];
            String s2 = s.split(",")[1];
            String s3 = s.split(",")[2];

            System.out.printf("%s %sTmp =  parse%sFromCell(columnNumbers.get(\"%s\"), currentRow);\n", s3, s1, s3, s1);
            System.out.printf("lineFromFileDto.set%s(%sTmp);\n\n", StringUtils.capitalize(s1), s1);
        }
        System.out.println("//End of AutoGenerated");
    }

    private static void createColumnMappingsForDto() {

        System.out.println("//AutoGenerated");

        for (String s : input) {
            System.out.print("columnMappings.put(\"");
            System.out.print(s.split(",")[0]);
            System.out.print("\"" + "," + "\"");
            System.out.print(s.split(",")[1]);
            System.out.print("\");");
            System.out.println();
        }
        System.out.println("//End of AutoGenerated");
    }

    private static void createEntity() {

        StringBuilder sb = new StringBuilder();


        System.out.println("//AutoGenerated");

        System.out.println("@Id\n" +
                "@GeneratedValue(strategy = GenerationType.AUTO)\n" +
                "@Column(name = \"id\")\n" +
                "private Long id;\n");

        System.out.println("\n" +
                "@Column(name = \"file_name\")\n" +
                "private String fileName;");

        for (String s : input) {
            String[] podzielony = s.split(",");

            String[] strings = StringUtils.splitByCharacterTypeCamelCase(podzielony[0]);

            sb.setLength(0);
            for (String string : strings) {
                sb.append(string.toLowerCase());
                sb.append("_");
            }
            sb.deleteCharAt(sb.lastIndexOf("_"));

            System.out.printf("@Column(name = \"%s\")\n", sb.toString());
            System.out.printf("private %s %s; \n\n", podzielony[3], podzielony[0]);

        }

        System.out.println("//End of AutoGenerated");
    }


    private static void createConverterFromDtoToEntity() {

        System.out.println("//AutoGenerated");

        for (String s : input) {
            String[] podzielony = s.split(",");

            String nameUp = StringUtils.capitalize(podzielony[0]);
            String name = podzielony[0];



            if ("BigDecimal".equals(podzielony[3])) {
                System.out.printf("\nDouble %sTmp = lineFromFileDto.get%s();\n", name, nameUp);
                System.out.printf("lineFromFile.set%s(parseDoubleToBigDecimal(%sTmp, %d));\n", nameUp, name, Integer.parseInt(podzielony[4]));
            } else {
                System.out.printf("\nlineFromFile.set%s(lineFromFileDto.get%s());\n", nameUp, nameUp);
            }


        }

        System.out.println("//End of AutoGenerated");

    }

}
